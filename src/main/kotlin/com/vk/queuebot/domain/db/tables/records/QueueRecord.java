/*
 * This file is generated by jOOQ.
*/
package com.vk.queuebot.domain.db.tables.records;


import com.vk.queuebot.domain.db.tables.Queue;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QueueRecord extends UpdatableRecordImpl<QueueRecord> implements Record4<Integer, String, Long, Long> {

    private static final long serialVersionUID = -527532502;

    /**
     * Setter for <code>PUBLIC.QUEUE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.QUEUE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.QUEUE.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.QUEUE.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.QUEUE.FROM_ID</code>.
     */
    public void setFromId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.QUEUE.FROM_ID</code>.
     */
    public Long getFromId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.QUEUE.CREATED_TS</code>.
     */
    public void setCreatedTs(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.QUEUE.CREATED_TS</code>.
     */
    public Long getCreatedTs() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Queue.QUEUE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Queue.QUEUE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Queue.QUEUE.FROM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Queue.QUEUE.CREATED_TS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getFromId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCreatedTs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getFromId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCreatedTs();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueueRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueueRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueueRecord value3(Long value) {
        setFromId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueueRecord value4(Long value) {
        setCreatedTs(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QueueRecord values(Integer value1, String value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QueueRecord
     */
    public QueueRecord() {
        super(Queue.QUEUE);
    }

    /**
     * Create a detached, initialised QueueRecord
     */
    public QueueRecord(Integer id, String name, Long fromId, Long createdTs) {
        super(Queue.QUEUE);

        set(0, id);
        set(1, name);
        set(2, fromId);
        set(3, createdTs);
    }
}
